// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WordMergeModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef(render)>
        <ForwardRef
          closeButton={false}
          closeLabel="Close"
        >
          <ForwardRef>
            Please select which option you would like to use for 
            . If you want to save both click merge.
          </ForwardRef>
        </ForwardRef>
        <br />
        <ForwardRef>
           
          <ForwardRef
            active={false}
            disabled={false}
            id="firstChoice"
            type="button"
            variant="primary"
          >
            Use This Data
          </ForwardRef>
          <br />
           
          <ForwardRef
            active={false}
            disabled={false}
            id="secondChoice"
            type="button"
            variant="primary"
          >
            Use This Data
          </ForwardRef>
        </ForwardRef>
        <ForwardRef>
          <ForwardRef
            active={false}
            disabled={false}
            id="closeButton"
            type="button"
            variant="secondary"
          >
            Cancel
          </ForwardRef>
          <ForwardRef
            active={false}
            disabled={false}
            id="mergeButton"
            type="button"
            variant="primary"
          >
            Merge Data
          </ForwardRef>
        </ForwardRef>
      </ForwardRef(render)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            closeButton={false}
            closeLabel="Close"
          >
            <ForwardRef>
              Please select which option you would like to use for 
              . If you want to save both click merge.
            </ForwardRef>
          </ForwardRef>,
          <br />,
          <ForwardRef>
             
            <ForwardRef
              active={false}
              disabled={false}
              id="firstChoice"
              type="button"
              variant="primary"
            >
              Use This Data
            </ForwardRef>
            <br />
             
            <ForwardRef
              active={false}
              disabled={false}
              id="secondChoice"
              type="button"
              variant="primary"
            >
              Use This Data
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef
              active={false}
              disabled={false}
              id="closeButton"
              type="button"
              variant="secondary"
            >
              Cancel
            </ForwardRef>
            <ForwardRef
              active={false}
              disabled={false}
              id="mergeButton"
              type="button"
              variant="primary"
            >
              Merge Data
            </ForwardRef>
          </ForwardRef>,
        ],
        "id": undefined,
        "show": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef>
              Please select which option you would like to use for 
              . If you want to save both click merge.
            </ForwardRef>,
            "closeButton": false,
            "closeLabel": "Close",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Please select which option you would like to use for ",
                undefined,
                ". If you want to save both click merge.",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Please select which option you would like to use for ",
              undefined,
              ". If you want to save both click merge.",
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "ModalTitle",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "closeButton": false,
              "closeLabel": "Close",
            },
            "displayName": "ModalHeader",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              undefined,
              " ",
              <ForwardRef
                active={false}
                disabled={false}
                id="firstChoice"
                type="button"
                variant="primary"
              >
                Use This Data
              </ForwardRef>,
              <br />,
              undefined,
              " ",
              <ForwardRef
                active={false}
                disabled={false}
                id="secondChoice"
                type="button"
                variant="primary"
              >
                Use This Data
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            undefined,
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "children": "Use This Data",
                "disabled": false,
                "id": "firstChoice",
                "onClick": undefined,
                "type": "button",
                "variant": "primary",
              },
              "ref": null,
              "rendered": "Use This Data",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            undefined,
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "children": "Use This Data",
                "disabled": false,
                "id": "secondChoice",
                "onClick": undefined,
                "type": "button",
                "variant": "primary",
              },
              "ref": null,
              "rendered": "Use This Data",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "ModalBody",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                active={false}
                disabled={false}
                id="closeButton"
                type="button"
                variant="secondary"
              >
                Cancel
              </ForwardRef>,
              <ForwardRef
                active={false}
                disabled={false}
                id="mergeButton"
                type="button"
                variant="primary"
              >
                Merge Data
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "children": "Cancel",
                "disabled": false,
                "id": "closeButton",
                "onClick": undefined,
                "type": "button",
                "variant": "secondary",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "children": "Merge Data",
                "disabled": false,
                "id": "mergeButton",
                "onClick": undefined,
                "type": "button",
                "variant": "primary",
              },
              "ref": null,
              "rendered": "Merge Data",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "ModalFooter",
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "BACKDROP_TRANSITION_DURATION": 150,
        "Body": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "ModalBody",
          "render": [Function],
        },
        "Dialog": Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "ModalDialog",
          "render": [Function],
        },
        "Footer": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "ModalFooter",
          "render": [Function],
        },
        "Header": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "closeButton": false,
            "closeLabel": "Close",
          },
          "displayName": "ModalHeader",
          "render": [Function],
        },
        "TRANSITION_DURATION": 300,
        "Title": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "ModalTitle",
          "render": [Function],
        },
        "defaultProps": undefined,
        "displayName": "Bootstrap(Modal)",
        "propTypes": undefined,
        "render": [Function],
      },
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef(render)>
          <ForwardRef
            closeButton={false}
            closeLabel="Close"
          >
            <ForwardRef>
              Please select which option you would like to use for 
              . If you want to save both click merge.
            </ForwardRef>
          </ForwardRef>
          <br />
          <ForwardRef>
             
            <ForwardRef
              active={false}
              disabled={false}
              id="firstChoice"
              type="button"
              variant="primary"
            >
              Use This Data
            </ForwardRef>
            <br />
             
            <ForwardRef
              active={false}
              disabled={false}
              id="secondChoice"
              type="button"
              variant="primary"
            >
              Use This Data
            </ForwardRef>
          </ForwardRef>
          <ForwardRef>
            <ForwardRef
              active={false}
              disabled={false}
              id="closeButton"
              type="button"
              variant="secondary"
            >
              Cancel
            </ForwardRef>
            <ForwardRef
              active={false}
              disabled={false}
              id="mergeButton"
              type="button"
              variant="primary"
            >
              Merge Data
            </ForwardRef>
          </ForwardRef>
        </ForwardRef(render)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              closeButton={false}
              closeLabel="Close"
            >
              <ForwardRef>
                Please select which option you would like to use for 
                . If you want to save both click merge.
              </ForwardRef>
            </ForwardRef>,
            <br />,
            <ForwardRef>
               
              <ForwardRef
                active={false}
                disabled={false}
                id="firstChoice"
                type="button"
                variant="primary"
              >
                Use This Data
              </ForwardRef>
              <br />
               
              <ForwardRef
                active={false}
                disabled={false}
                id="secondChoice"
                type="button"
                variant="primary"
              >
                Use This Data
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                active={false}
                disabled={false}
                id="closeButton"
                type="button"
                variant="secondary"
              >
                Cancel
              </ForwardRef>
              <ForwardRef
                active={false}
                disabled={false}
                id="mergeButton"
                type="button"
                variant="primary"
              >
                Merge Data
              </ForwardRef>
            </ForwardRef>,
          ],
          "id": undefined,
          "show": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef>
                Please select which option you would like to use for 
                . If you want to save both click merge.
              </ForwardRef>,
              "closeButton": false,
              "closeLabel": "Close",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Please select which option you would like to use for ",
                  undefined,
                  ". If you want to save both click merge.",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Please select which option you would like to use for ",
                undefined,
                ". If you want to save both click merge.",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "displayName": "ModalTitle",
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "closeButton": false,
                "closeLabel": "Close",
              },
              "displayName": "ModalHeader",
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                undefined,
                " ",
                <ForwardRef
                  active={false}
                  disabled={false}
                  id="firstChoice"
                  type="button"
                  variant="primary"
                >
                  Use This Data
                </ForwardRef>,
                <br />,
                undefined,
                " ",
                <ForwardRef
                  active={false}
                  disabled={false}
                  id="secondChoice"
                  type="button"
                  variant="primary"
                >
                  Use This Data
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              undefined,
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": "Use This Data",
                  "disabled": false,
                  "id": "firstChoice",
                  "onClick": undefined,
                  "type": "button",
                  "variant": "primary",
                },
                "ref": null,
                "rendered": "Use This Data",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              undefined,
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": "Use This Data",
                  "disabled": false,
                  "id": "secondChoice",
                  "onClick": undefined,
                  "type": "button",
                  "variant": "primary",
                },
                "ref": null,
                "rendered": "Use This Data",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "ModalBody",
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  active={false}
                  disabled={false}
                  id="closeButton"
                  type="button"
                  variant="secondary"
                >
                  Cancel
                </ForwardRef>,
                <ForwardRef
                  active={false}
                  disabled={false}
                  id="mergeButton"
                  type="button"
                  variant="primary"
                >
                  Merge Data
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": "Cancel",
                  "disabled": false,
                  "id": "closeButton",
                  "onClick": undefined,
                  "type": "button",
                  "variant": "secondary",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": "Merge Data",
                  "disabled": false,
                  "id": "mergeButton",
                  "onClick": undefined,
                  "type": "button",
                  "variant": "primary",
                },
                "ref": null,
                "rendered": "Merge Data",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "ModalFooter",
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "BACKDROP_TRANSITION_DURATION": 150,
          "Body": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "ModalBody",
            "render": [Function],
          },
          "Dialog": Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "ModalDialog",
            "render": [Function],
          },
          "Footer": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "ModalFooter",
            "render": [Function],
          },
          "Header": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "closeButton": false,
              "closeLabel": "Close",
            },
            "displayName": "ModalHeader",
            "render": [Function],
          },
          "TRANSITION_DURATION": 300,
          "Title": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "ModalTitle",
            "render": [Function],
          },
          "defaultProps": undefined,
          "displayName": "Bootstrap(Modal)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
